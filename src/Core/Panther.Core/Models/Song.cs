using System;
using System.Collections.Generic;

namespace Panther.Core.Models
{
    public class Song : IIdentificable, IEquatable<Song>
    {
        #region Primary key
        /// <summary>
        /// Autogenerated song id
        /// </summary>
        public long Id { get; set; }
        #endregion


        #region Foreign keys
        /// <summary>
        /// Album id
        /// </summary>
        public long AlbumId { get; set; }
        #endregion


        #region Song properties
        /// <summary>
        /// File location of the song
        /// </summary>
        public string FileName { get; set; }

        /// <summary>
        /// Song name
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        /// Length in seconds
        /// </summary>
        public long Length { get; set; }

        /// <summary>
        /// Track number
        /// </summary>
        public uint TrackNumber { get; set; }
        #endregion


        #region Navigation properties
        /// <summary>
        /// Album
        /// </summary>
        public Album Album { get; set; }

        /// <summary>
        /// Artist
        /// </summary>
        public Artist Artist => Album.Artist;

        /// <summary>
        /// Playlists
        /// </summary>
        public ICollection<SongPlaylist> SongPlaylists { get; set; }
        #endregion


        #region Implementations
        public bool Equals(Song other) =>
            Id == default ? FileName == other.FileName : Id == other.Id;
        #endregion
    }
}
